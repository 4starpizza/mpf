environment:

  matrix:
    - PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python34-x64"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python35-x64"

  pypi_user:
    secure: kxNKBuVMdOz6LjJPQb7PMQ==

  pypi_password:
    secure: nmmwU7UgFbrGUJwIr0Vo6cHzCuxlvW4vjg9TjkwrjmE=

install:
  - "%PYTHON%\\python.exe -m pip install -U setuptools wheel pip mock gitpython"

  - "cd build_scripts"
    # sets whether we should deploy to pypi (if there's a change to _version.py)
  - "%PYTHON%\\python.exe set_build_env_vars.py"
  - "set_env.bat"  # auto generated by set_build_env_vars.py
  - "cd \\projects\\mpf"

build: off

test_script:
  - "%PYTHON%\\python.exe setup.py test -q"

after_test:
  # mpf packages are universal, so only need to build wheels & tarball once
  - "if %PYTHON% == 'C:\\Python34' %PYTHON%\\python.exe setup.py sdist --formats=gztar"
  - "if %PYTHON% == 'C:\\Python34' %PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  - path: dist\*

deploy_script:
  - "echo %DEPLOY_TO_PYPI%"
  - "if %PYTHON% == 'C:\\Python34' cd dist"
  - "if %PYTHON% == 'C:\\Python34' dir"
  - "if %PYTHON% == 'C:\\Python34' if %DEPLOY_TO_PYPI% == 1 echo Deploying"
  - "if %PYTHON% == 'C:\\Python34' if %DEPLOY_TO_PYPI% == 1 %PYTHON%\\python.exe -m pip install twine"
  - "if %PYTHON% == 'C:\\Python34' if %DEPLOY_TO_PYPI% == 1 %PYTHON%\\python.exe -m twine upload -u %pypi_user% -p %pypi_password% *"
